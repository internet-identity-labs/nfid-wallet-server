type Topic = text;
type Message = text;
type PhoneNumber = text;
type Token = text;
type Error = text;

type MessageHttpResponse = record {
    status_code: nat16;
    body: opt vec Message;
};

type BoolHttpResponse = record {
    data: opt bool;
    error: opt Error;
    status_code: nat16;
};

type Account = record {
    principal_id: text;
    name: text;
    phone_number: text;
    email: text;
};

type HTTPAccountResponse = record {
    data: opt Account;
    error: opt Error;
    status_code: nat16;
};

type HTTPAccountRequest = record {
    name: text;
    phone_number: text;
    email: text;
};

type HTTPAccountUpdateRequest = record {
    name: opt text;
    phone_number: opt text;
    email: opt text;
};

service : () -> {
  get_account: () -> (HTTPAccountResponse) query;
  create_account: (HTTPAccountRequest) -> (HTTPAccountResponse);
  update_account: (HTTPAccountUpdateRequest) -> (HTTPAccountResponse);

  verify_phone_number: (PhoneNumber) -> (BoolHttpResponse);
  verify_token: (Token) -> (BoolHttpResponse);

  post_messages: (Topic, vec Message) -> (MessageHttpResponse);
  get_messages: (Topic) -> (MessageHttpResponse);
  create_topic: (Topic) -> (MessageHttpResponse);
  delete_topic: (Topic) -> (MessageHttpResponse);
}
