name: Deployment
on: workflow_dispatch
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: DFX SETUP | write identity pem
        run: |
          mkdir -p $ID_PATH
          echo $GH_MP_ADMIN_PEM >> $ID_PATH/identity.pem
          sed -i 's/\\r\\n/\r\n/g' $ID_PATH/identity.pem
        shell: bash
        env:
          GH_MP_ADMIN_PEM: ${{secrets.GH_MP_ADMIN_PEM}}
          ID_PATH: /home/runner/.config/dfx/identity/gh_mp_admin

      - name: DFX SETUP  | Provision Linux
        run: bash .github/workflows/dfx-provision-linux.sh

      - name: Install Rust
        run: |
          rustup update 1.51.0 --no-self-update
          rustup default 1.51.0
          rustup target add wasm32-unknown-unknown

      - name: IDENITY MANAGER | Deploy to production
        run: |
          dfx identity use gh_mp_admin
          i=0;
          while :;
          do
            rm -rf .dfx;
            dfx deploy --network ic --no-wallet;
            sleep 5;
            set +e;
            im=$(dfx canister --network ic call identity_manager configure '(record {key = blob "${{secrets.KEY}}"; lambda = principal "${{secrets.LAMBDA_PRINCIPAL}}"; token_ttl = ${{secrets.TOKEN_TTL}} })');
            ps=$(dfx canister --network ic call pub_sub_channel ping);
            set -e;
            ((i=i+1));
            printf 'Try #%s with result: im-%s and ps-%s\n' "$i" "$im" "$ps";
            [[ 20 -gt $i ]] || exit 255;
            ([[ "()" != $im ]] || [[ "()" != $ps ]]) || break;
          done
