name: CRON Backup Internet Identity
on:
  schedule:
      # Runs "every hour at 0 minutes" (see https://crontab.guru)
      - cron: '0 * * * *'

env:
  NETWORK_NAME: 'ic'
  CANISTER_NAME: 'internet_identity'
  CI_DEBUG: 'true'

jobs:
  Backup:
    runs-on: [self-hosted, Linux, X64]
    # container:
    #   image: identitylabs/dfxctl:0.10.1-compiled
    defaults:
      run:
        shell: bash

    steps:
      - name: DFX => Write identity.
        run: |
          mkdir -p $ID_PATH
          echo $GH_MP_ADMIN_PEM >> $ID_PATH/identity.pem
          sed -i 's/\\r\\n/\r\n/g' $ID_PATH/identity.pem
        env:
          GH_MP_ADMIN_PEM: ${{secrets.GH_MP_ADMIN_PEM}}
          ID_PATH: /home/ubuntu/.config/dfx/identity/gh_mp_admin

      - name: Checkout repo.
        uses: actions/checkout@v3

      - name: Checkout CI repo.
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: internet-identity-labs/ci_libs
          ref: main
          path: ci_libs

      - name: Cache Cargo dependencies.
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            /cargo
            /cargo_target
            target/
          key: ${{ runner.os }}-cargo-${{ github.event.inputs.network_name }}-${{ github.event.inputs.canister_name }}-${{ hashFiles('**/Cargo.lock') }}

      - name: PRE-BACKUP => Populate env vars.
        run: |
          dfx start --background --clean --host 0.0.0.0:8000 &
          source ./ci_libs/CI_LIBS.sh
          # export HOME=/root

          ci_echo_debug "Getting values from dfx.json" >&2
          if ! canister_data=$(cat dfx.json | jq -er ".canisters.${CANISTER_NAME}"); then
            ci_echo_error "Can't found canister '${CANISTER_NAME}' data from dfx.json" >&2
            exit 1
          fi

          CANISTER_DID="$(cat dfx.json | jq -er ".canisters.${CANISTER_NAME}.candid")"
          CANISTER_WASM="$(cat dfx.json | jq -er ".canisters.${CANISTER_NAME}.wasm")"
          CANISTER_BRANCH="${GITHUB_REF_NAME////-}"
            
          echo "CANISTER_DID=${CANISTER_DID}" >> $GITHUB_ENV
          echo "CANISTER_WASM=${CANISTER_WASM}" >> $GITHUB_ENV
          echo "CANISTER_BRANCH=${CANISTER_BRANCH}" >> $GITHUB_ENV
          
          ci_echo_info "NETWORK_NAME=${NETWORK_NAME}" >&2
          ci_echo_info "CANISTER_NAME=${CANISTER_NAME}" >&2
          ci_echo_info "CANISTER_DID=${CANISTER_DID}" >&2
          ci_echo_info "CANISTER_WASM=${CANISTER_WASM}" >&2
          ci_echo_info "CANISTER_BRANCH=${CANISTER_BRANCH}" >&2
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: BACKUP => Backup.
        run: |
          source ./ci_libs/CI_LIBS.sh

          dfx identity use gh_mp_admin

          ./ci_libs/backup.sh "${CANISTER_NAME}" "${NETWORK_NAME}" "${BACKUP_FOLDER}" "${BACKUP_CHUNK_SIZE}"
        env:
          BACKUP_FOLDER: /home/ubuntu/backup/
          BACKUP_CHUNK_SIZE: 3000
